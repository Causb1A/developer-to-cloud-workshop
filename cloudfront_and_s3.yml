AWSTemplateFormatVersion: '2010-09-09'

Parameters:
  BucketName:
    {Type: String, Default: "hack-sussex-interconnector-front-end"}
  OriginAccessControlName:
    {Type: String, Default: "hack-sussex-origin-access-control"}
  ApiToken:
    {Type: String, Default: "default-token"}

Resources:
  OriginAccessControl:
   Type: AWS::CloudFront::OriginAccessControl
   Properties: 
    OriginAccessControlConfig: 
        Description: "Control Access to S3"
        Name: !Ref OriginAccessControlName
        OriginAccessControlOriginType: s3
        SigningBehavior: always
        SigningProtocol: sigv4

  StaticResourcesBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref BucketName
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true

  StaticResourcesBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref StaticResourcesBucket
      PolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service: cloudfront.amazonaws.com
            Action: s3:GetObject
            Resource: !Sub ${StaticResourcesBucket.Arn}/*
            Condition:
              StringEquals:
                AWS:SourceArn: !Sub arn:aws:cloudfront::${AWS::AccountId}:distribution/${Distribution}
            
  Distribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Origins:
          - DomainName: !Sub ${StaticResourcesBucket}.s3.${AWS::Region}.amazonaws.com
            Id: S3Origin
            OriginAccessControlId: !Ref OriginAccessControl
            S3OriginConfig:
              OriginAccessIdentity: ''
        Enabled: true
        DefaultRootObject: index.html
        DefaultCacheBehavior:
          AllowedMethods:
            - GET
            - HEAD
            - OPTIONS
          TargetOriginId: S3Origin
          ForwardedValues:
            QueryString: false
            Cookies:
              Forward: none
          ViewerProtocolPolicy: allow-all
        ViewerCertificate:
          CloudFrontDefaultCertificate: true
  
  APITokenParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: entsoe-api-token
      Type: String
      Value: !Ref ApiToken
      Description: SSM Parameter for the entsoe API token for the workshop
      AllowedPattern: "^[a-zA-Z]{1,10}$"

  InterconnectorDynamoDB:
    Type: AWS::DynamoDB::Table
    Properties: 
      AttributeDefinitions: 
        - 
          AttributeName: "datetime"
          AttributeType: "N"
        - 
          AttributeName: "date"
          AttributeType: "N"
        - 
          AttributeName: "Belgium"
          AttributeType: "N"
        - 
          AttributeName: "France"
          AttributeType: "N"
        - 
          AttributeName: "Netherlands"
          AttributeType: "N"
        - 
          AttributeName: "Norway"
          AttributeType: "N"
      KeySchema: 
        - 
          AttributeName: "datetime"
          KeyType: "HASH"
        - 
          AttributeName: "date"
          KeyType: "RANGE"
      ProvisionedThroughput:
        ReadCapacityUnits: 10
        WriteCapacityUnits: 10
      TableName: interconnector-data

  DynamoDbRolePut:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - "sts:AssumeRole"
      Description: All access to DynamoDB table
      Policies:
        - PolicyName: DynamoDBAllowAllForInterconnectorDB
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Sid: AllowAll
                Effect: Allow
                Action:
                  - dynamodb:*
                Resource: !Sub ${InterconnectorDynamoDB.Arn}
        - PolicyName: SSMParameter
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Sid: EntsoeSSMParameter
                Effect: Allow
                Action:
                  - ssm:DescribeParameters
                  - ssm:GetParameters
                Resource: !Sub ${APITokenParameter.Arn}
      RoleName: interconnector-get-and-put-in-dynamodb
      
